---
- name: 'Create directories.'
  file:
    path: '{{ item }}'
    state: 'directory'
  loop: '{{ dirs }}'

- name: 'Place dotfiles.'
  file:
    path: '{{ item.path }}'
    src: '{{ item.src }}'
    state: 'link'
  loop: '{{ dotfiles }}'

- name: 'Start gpg-agent.'
  command: 'gpg-connect-agent /bye'

- name: 'Clone git repos.'
  git:
    dest: '{{ item.dest }}'
    repo: '{{ item.repo }}'
    version: '{{ item.version | default(omit) }}'
    force: '{{ item.force | default(omit) }}'
    accept_hostkey: 'yes'
  ignore_errors: '{{ item.ignore_errors | default(omit) }}'
  loop: '{{ git_repos }}'

- name: 'Place dotfiles from git repos.'
  file:
    path: '{{ item.path }}'
    src: '{{ item.src }}'
    state: 'link'
  loop: '{{ git_dotfiles }}'

- name: "Modify zshrc to load zsh extensions."
  lineinfile:
    path: '~/.zshrc'
    line: 'for config_file (~/.zsh/*.zsh) source $config_file'
    state: 'present'

- name: 'Add zsh to standard shell list.'
  lineinfile:
    path: '/private/etc/shells'
    line: '/usr/local/bin/zsh'
    state: 'present'
    become: 'yes'
  when: ansible_os_family == 'Darwin'

- name: 'Set zsh as default shell.'
  command: 'chsh -s /usr/local/bin/zsh'
  when: ansible_os_family == 'Darwin'

- name: 'Set zsh as default shell.'
  command: 'chsh -s /usr/bin/zsh'
  become: 'yes'
  when: ansible_os_family == 'Debian'

- name: 'Install go packages.'
  shell: 'GO111MODULE=off go get {{ item }}'
  args:
    executable: '/usr/local/bin/zsh'
  loop: '{{ go_pkgs }}'
  when: ansible_os_family == 'Darwin'

- name: 'Install go packages.'
  shell: 'go get {{ item }}'
  args:
    executable: '/usr/bin/zsh'
  loop: '{{ go_pkgs }}'
  when: ansible_os_family == 'Debian'

- name: 'Install pip packages.'
  pip:
    name: '{{ item.name }}'
  ignore_errors: '{{ item.ignore_errors | default(omit) }}'
  loop: '{{ pip_pkgs }}'

- name: 'Update vim packages.'
  command: 'vim --noplugin -u ~/.vim/vundles.vim -N "+set hidden" "+syntax on" +BundleClean! +BundleInstall! +qall'

- name: 'Sync AWS directories.'
  command: "aws {{ item.profile | ternary([' --profile', item.profile] | join('='), '') }} s3 sync {{ item.src }} {{ item.dest }}"
  ignore_errors: '{{ item.ignore_errors | default(omit) }}'
  loop: '{{ aws_s3_syncs }}'

- name: 'Sync GCP storage directories.'
  command: 'gsutil -m rsync -r {{ item.src }} {{ item.dest }}'
  ignore_errors: '{{ item.ignore_errors | default(omit) }}'
  loop: '{{ gcp_storage_syncs }}'
